<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <OutputType>Library</OutputType>
        <TargetFramework>net8.0</TargetFramework>
        <Version>0.2.0-alpha</Version>
        <EnableTrimAnalyzer>true</EnableTrimAnalyzer>
        <IsAotCompatible>true</IsAotCompatible>
        <PublishAot>true</PublishAot>
        <PublishTrimmed>true</PublishTrimmed>
        <InvariantGlobalization>true</InvariantGlobalization>
    </PropertyGroup>

    <PropertyGroup>
        <PackageId>RyuSocks</PackageId>
        <Title>RyuSOCKS: SOCKS5 proxy library</Title>
        <Description>An extensible SOCKS5 proxy library.</Description>
        <RepositoryUrl>https://github.com/TSRBerry/RyuSOCKS</RepositoryUrl>
        <PackageTags>socks;socks5;proxy;client;server</PackageTags>
        <Authors>TSRBerry</Authors>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <PackageIcon>icon.png</PackageIcon>
        <PackageReleaseNotes>
            The full changelog is available at: https://github.com/TSRBerry/RyuSOCKS/blob/master/CHANGELOG.md

            ---

            ### Added

            - Logo made by [Justin de Haas](https://onemuri.nl/).
            - Basic SOCKS5 proxy client (not compliant yet).
            - New generated `IProxyAuth.GetAuth()` extension method
            to get the `AuthMethod` value from an auth implementation.
            - `Packet` constructor which takes a byte array.
            - New method `Packet.AsSpan()` to get the underlying byte array of a packet
            as a `Span{byte}`.
            - Constructors taking a `ProxyEndpoint` for `EndpointPackets`.
            - `Equals()` and `GetHashCode()` implementation for `ProxyEndpoint`.
            - New interface `IWrapper` which contains `Wrap()` and `Unwrap()`.
            - New properties for `Command` implementations to control communication
            with the proxy server.
            - New method `Packet.IsValid()` which returns a bool instead of throwing exceptions.
            - `Validate()` implementation for `EndPointPacket`.
            - `Socket.Close()` and `Socket.Dispose()` methods are exposed by `SocksClient` now.
            - Missing parameterless constructor for `CommandRequest`.

            ### Changed

            - Improved introduction in `README.md`.
            - Renamed `Destination` class to `ProxyEndpoint`.
            - `SocksSession.Process*()` methods were marked as virtual.
            - Improved exception messages.
            - Throw `ArgumentOutOfRangeException` instead of `ArgumentException`
            if the length of the domain name is invalid for `EndpointPackets`.
            - Replaced init-only setter for `Packet.Bytes` with a regular setter.
            - Replaced protected fields of `SocksSession` with public properties
            containing a protected setter.
            - Changed the signature for `Wrap()` and `Unwrap()`.

            ### Fixed

            - Misbehaving UdpAssociate command.
        </PackageReleaseNotes>
        <PackageLicenseExpression>GPL-2.0-only</PackageLicenseExpression>
        <IncludeSymbols>true</IncludeSymbols>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
    </PropertyGroup>

    <ItemGroup>
        <None Include="..\LICENSE" Pack="true" PackagePath="" />
        <None Include="..\README.md" Pack="true" PackagePath="" />
        <None Include="icon.png" Pack="true" PackagePath="" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="NetCoreServer" Version="8.0.7" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\RyuSocks.Generator\RyuSocks.Generator.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
    </ItemGroup>
</Project>
